services:
  redis:
    image: redis:alpine
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network
    command: redis-server --appendonly yes

  # mongo:
  #   image: mongo:latest
  #   container_name: mongo
  #   restart: always
  #   ports:
  #     - "27017:27017"
  #   volumes:
  #     - mongo_data:/data/db
  #   networks:
  #     - app-network

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: api
    restart: always
    ports:
      - "8000:8000"
    depends_on:
      - redis
      # - mongo
    environment:
      - NODE_ENV=dev
      - REDIS_URL=redis://redis:6379
      # - DB_URL=mongodb://mongo:27017/zocular
    volumes:
      - ./env:/app/env
      - ./src:/app/src
    networks:
      - app-network

  email_worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: email_worker
    restart: always
    depends_on:
      - redis
      # - mongo
    environment:
      - NODE_ENV=dev
      - REDIS_URL=redis://redis:6379
      # - DB_URL=mongodb://mongo:27017/zocular
    volumes:
      - ./env:/app/env
      - ./src:/app/src
    networks:
      - app-network
    command: npm run worker:email

  nginx:
    image: nginx:alpine
    container_name: nginx-zocular
    restart: always
    depends_on:
      - api
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d/:/etc/nginx/conf.d/
      - ./nginx/ssl/:/etc/nginx/ssl/
      - ./nginx/logs:/var/log/nginx
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  redis_data:
  # mongo_data:
